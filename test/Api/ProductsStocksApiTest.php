<?php
/**
 * ProductsStocksApiTest
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Prepaidforge API
 *
 * The public api for prepaidforge
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 4.0.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client;

use OpenAPI\Client\Api\UserApi;
use OpenAPI\Client\Model\MerchantSignInRequest;
use OpenAPI\Client\Api\ProductsStocksApi;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * ProductsStocksApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class ProductsStocksApiTest extends TestCase
{
    private static $configuration;
    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
        $merchantSignInRequest = new MerchantSignInRequest(['email'=>"USERNAME", "password"=>"PASS"]);

        $apiKey = (new UserApi())->signInWithApi($merchantSignInRequest)["api_token"];
        self::$configuration = Configuration::getDefaultConfiguration()->setApiKey('X-PrepaidForge-Api-Token', $apiKey);
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
        $this->client = new ProductsStocksApi(null, self::$configuration);
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for findAllProducts
     *
     * .
     *
     */
    public function testFindAllProducts()
    {
       $allProducts = $this->client->findAllProducts();
       $this->assertNotEmpty($allProducts);
    }

    /**
     * Test case for findAllStocks
     *
     * .
     *
     */
    public function testFindAllStocks()
    {
        $stock_request = new \OpenAPI\Client\Model\StockRequest(["types"=>['TEXT'], "skus"=>["iTunes-10-USD"]]);
        $all_stocks = $this->client->findAllStocks($stock_request);
        $this->assertNotEmpty($all_stocks);
    }
}
