<?php
/**
 * OrdersCodesApiTest
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Prepaidforge API
 *
 * The public api for prepaidforge
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 4.0.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;


use OpenAPI\Client\Api\UserApi;
use OpenAPI\Client\Model\MerchantSignInRequest;
use OpenAPI\Client\Model\SkuRequest;
use OpenAPI\Client\Api\OrdersCodesApi;

/**
 * OrdersCodesApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class OrdersCodesApiTest extends TestCase
{

    private static $configuration;
    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
        $merchantSignInRequest = new MerchantSignInRequest(['email'=>"USERNAME", "password"=>"PASS"]);
        $apiKey = (new UserApi())->signInWithApi($merchantSignInRequest)["api_token"];
        self::$configuration = Configuration::getDefaultConfiguration()->setApiKey('X-PrepaidForge-Api-Token', $apiKey);
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
        $this->client = new OrdersCodesApi(null, self::$configuration);
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for createSingleOrder
     *
     * .
     *
     */
    public function testCreateSingleOrder()
    {
        $skuRequest = new SkuRequest([
            "sku" => "iTunes-10-USD",
            'price' => 8.6726,
            'quantity' => 1,
            'custom_order_reference' => "phpCustomOrderReference" ,
            'code_type' => "TEXT"
        ]);

        $res = $this->client->createSingleOrder($skuRequest);
        $this->assertNotEmpty($res);
    }

    /**
     * Test case for getResponseOfSingleCodeRequest
     *
     * .
     *
     */
    public function testGetResponseOfSingleCodeRequest()
    {
        $skuRequest = new SkuRequest([
            'custom_order_reference' => "phpCustomOrderReference" ,
        ]);

        $res = $this->client->getResponseOfSingleCodeRequest($skuRequest);
        $this->assertNotEmpty($res);
    }
}
